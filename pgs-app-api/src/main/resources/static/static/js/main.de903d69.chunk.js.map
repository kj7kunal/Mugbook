{"version":3,"sources":["containers/Home.js","constants/index.js","util/APIUtils.js","containers/Login.js","containers/Signup.js","containers/PokeNews.js","containers/Trainer.js","containers/Search.js","common/NotFound.js","components/AppliedRoute.js","Routes.js","common/LoadingIndicator.jsx","App.js","serviceWorker.js","index.js"],"names":["Home","className","API_BASE_URL","ACCESS_TOKEN","request","options","headers","Headers","localStorage","getItem","append","defaults","Object","assign","fetch","url","then","response","json","ok","Promise","reject","createPost","postData","method","body","JSON","stringify","Login","props","validateAlias","alias","length","validatestatus","errorMsg","validatePassword","password","state","isLoading","value","error","handleAliasChange","bind","handlePassChange","handleSubmit","this","event","validationFun","setState","inputValue","target","preventDefault","loginRequest","login","setItem","accessToken","onLogin","catch","message","status","console","log","onSubmit","FormGroup","controlId","bsSize","ControlLabel","FormControl","autoFocus","type","name","placeholder","help","required","onChange","autoComplete","Button","block","React","Component","Signup","email","confirmpassword","team","gender","errorAlias","errorPass","handleEmailChange","handleCPassChange","handleGChange","handleTChange","inputG","inputT","signupRequest","signup","history","push","Row","Col","md","componentClass","inputRef","tm","gen","ALIAS_MIN_LENGTH","ALIAS_MAX_LENGTH","PASSWORD_MIN_LENGTH","PASSWORD_MAX_LENGTH","PokeNews","content","posts","handleContentChange","isAuthenticated","loadAllPosts","concat","map","post","i","ListGroupItem","key","id","createdBy","Date","updatedAt","reverse","PageHeader","defaultValue","bsStyle","ListGroup","renderPostList","Trainer","currentUser","Search","searchKey","searchPosts","NotFound","C","component","cProps","rest","render","Routes","childProps","AppliedRoute","path","exact","LoadingIndicator","role","App","handleLogout","loadCurrentUser","handleLogin","removeItem","Navbar","fluid","collapseOnSelect","Header","Brand","to","alt","src","width","height","Toggle","Collapse","Nav","pullRight","NavItem","onClick","withRouter","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.de903d69.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Home.css\";\n\nexport default function Home() {\n  return (\n    <div className=\"Home\">\n      <div className=\"lander\">\n        <h1>Pokemon GO Social</h1>\n        <p>React powered Pokemon GO Social Networking App</p>\n      </div>\n    </div>\n  );\n}\n","export const API_BASE_URL = 'http://pokemongosocial.ap-northeast-1.elasticbeanstalk.com:5000';\nexport const ACCESS_TOKEN = 'accessToken';\n\nexport const ALIAS_MIN_LENGTH = 3;\nexport const ALIAS_MAX_LENGTH = 30;\n\nexport const PASSWORD_MIN_LENGTH = 8;\nexport const PASSWORD_MAX_LENGTH = 20;\n","import { API_BASE_URL, ACCESS_TOKEN } from '../constants';\n\nconst request = (options) => {\n    const headers = new Headers({\n        'Content-Type': 'application/json',\n    })\n\n    if(localStorage.getItem(ACCESS_TOKEN)) {\n        headers.append('Authorization', 'Bearer ' + localStorage.getItem(ACCESS_TOKEN))\n    }\n\n    const defaults = {headers: headers};\n    options = Object.assign({}, defaults, options);\n\n    return fetch(options.url, options)\n    .then(response =>\n        response.json().then(json => {\n            if(!response.ok) {\n                return Promise.reject(json);\n            }\n            return json;\n        })\n    );\n};\n\nexport function login(loginRequest) {\n    return request({\n        url: API_BASE_URL + \"/auth/login\",\n        method: 'POST',\n        body: JSON.stringify(loginRequest)\n    });\n}\n\nexport function signup(signupRequest) {\n  return request({\n    url: API_BASE_URL + \"/auth/signup\",\n    method: 'POST',\n    body: JSON.stringify(signupRequest)\n  });\n}\n\n// export function checkAliasAvailability(alias) {\n//     return request({\n//         url: API_BASE_URL + \"/user/checkAliasAvailability?username=\" + username,\n//         method: 'GET'\n//     });\n// }\n//\n// export function checkEmailAvailability(email) {\n//     return request({\n//         url: API_BASE_URL + \"/user/checkEmailAvailability?email=\" + email,\n//         method: 'GET'\n//     });\n// }\n\nexport function getCurrentUser() {\n    if(!localStorage.getItem(ACCESS_TOKEN)) {\n        return Promise.reject(\"No access token set.\");\n    }\n\n    return request({\n        url: API_BASE_URL + \"/trainers/me\",\n        method: 'GET'\n    });\n}\n\n\nexport function createPost(postData) {\n    if(!localStorage.getItem(ACCESS_TOKEN)) {\n        return Promise.reject(\"No access token set.\");\n    }\n\n    return request({\n        url: API_BASE_URL + \"/trainers/me/posts\",\n        method: 'POST',\n        body: JSON.stringify(postData)\n    });\n}\n\nexport function getAllPosts() {\n    if(!localStorage.getItem(ACCESS_TOKEN)) {\n        return Promise.reject(\"No access token set.\");\n    }\n\n    return request({\n        url: API_BASE_URL + \"/posts\",\n        method: 'GET'\n    });\n}\n\nexport function getAllMyPosts() {\n    if(!localStorage.getItem(ACCESS_TOKEN)) {\n        return Promise.reject(\"No access token set.\");\n    }\n\n    return request({\n        url: API_BASE_URL + \"/trainers/me/posts\",\n        method: 'GET'\n    });\n}\n\nexport function searchPostByAlias(alias) {\n    if(!localStorage.getItem(ACCESS_TOKEN)) {\n        return Promise.reject(\"No access token set.\");\n    }\n    return request({\n        url: API_BASE_URL + \"/posts/search?alias=\" + alias,\n        method: 'GET'\n    });\n}\n\nexport function getAllPostsByTrainerId(id) {\n    if(!localStorage.getItem(ACCESS_TOKEN)) {\n        return Promise.reject(\"No access token set.\");\n    }\n    return request({\n        url: API_BASE_URL + \"/trainers/\"+ id + \"/posts\",\n        method: 'GET'\n    });\n}\n","import React from 'react';\nimport { Button, FormGroup, FormControl, ControlLabel } from \"react-bootstrap\";\nimport \"./Login.css\";\nimport { login } from '../util/APIUtils';\nimport { ACCESS_TOKEN } from '../constants';\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: false,\n      alias: {value:''},\n      password: {value:''},\n      error: {value:''}\n    };\n\n    this.handleAliasChange = this.handleAliasChange.bind(this);\n    this.handlePassChange = this.handlePassChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  validateForm() {\n    return this.state.alias.length > 0 && this.state.password.length > 0;\n  }\n\n  handleAliasChange(event, validationFun) {\n    this.setState({ error: {value: ''}});\n    const target = event.target;\n    const inputValue = target.value;\n    this.setState({\n      alias: inputValue,\n      ...validationFun(inputValue)\n    });\n  }\n  handlePassChange(event, validationFun) {\n    this.setState({ error: {value: ''}});\n    const target = event.target;\n    const inputValue = target.value;\n    this.setState({\n      password: inputValue,\n      ...validationFun(inputValue)\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n\n    const loginRequest = {\n      alias: this.state.alias,\n      password: this.state.password\n    };\n\n    login(loginRequest)\n    .then(response => {\n        localStorage.setItem(ACCESS_TOKEN, response.accessToken);\n        this.props.onLogin();\n    }).catch(error => {\n        this.setState({ password: {value: '' }});\n        this.setState({ error: {value: error.message}});\n        if(error.status === 401) {\n            console.log('Your Username or Password is incorrect. Please try again!');\n        } else {\n            console.log(error.message);\n        }\n        this.setState({ isLoading: false });\n    });\n  }\n\n\n  render(){\n\n    return(\n      <div className=\"Login\">\n        <form onSubmit={this.handleSubmit}>\n          <FormGroup controlId=\"alias\" bsSize=\"large\">\n            <ControlLabel>Trainer Alias</ControlLabel>\n            <FormControl\n              autoFocus\n              type=\"text\"\n              name=\"alias\"\n              placeholder=\"Your registered trainer name\"\n              validatestatus={this.state.alias.validatestatus}\n              help={this.state.alias.errorMsg}\n              value={this.state.alias.value}\n              required={true}\n              onChange={(event) => this.handleAliasChange(event, this.validateAlias)}\n            />\n          </FormGroup>\n          <FormGroup controlId=\"password\" bsSize=\"large\">\n            <ControlLabel>Password</ControlLabel>\n            <FormControl\n              autoFocus\n              type=\"password\"\n              name=\"password\"\n              autoComplete=\"off\"\n              placeholder=\"Your password (8<chars<20)\"\n              validatestatus={this.state.password.validatestatus}\n              help={this.state.password.errorMsg}\n              value={this.state.password.value}\n              required={true}\n              onChange={(event) => this.handlePassChange(event, this.validatePassword)}\n            />\n          </FormGroup>\n          <Button block type=\"submit\">\n            Login\n          </Button>\n        </form>\n        <h5>{this.state.error.value}</h5>\n      </div>\n    )\n  }\n\n  validateAlias = (alias) => {\n      if(!alias) {\n          return {\n              validatestatus: 'error',\n              errorMsg: `Alias is not enterred.)`\n          }\n      } else if (alias.length < 0) {\n          return {\n              validatestatus: 'error',\n              errorMsg: `Alias is not enterred.)`\n          }\n      } else {\n          return {\n              validatestatus: 'success',\n              errorMsg: null,\n            };\n      }\n  }\n\n  validatePassword = (password) => {\n      if(!password) {\n          return {\n              validatestatus: 'error',\n              errorMsg: `Password is not enterred.)`\n          }\n      } else if (password.length < 0) {\n          return {\n              validatestatus: 'error',\n              errorMsg: `Password is not enterred.)`\n          }\n      } else {\n          return {\n              validatestatus: 'success',\n              errorMsg: null,\n            };\n      }\n  }\n}\n\n\nexport default Login;\n","import React from 'react';\nimport { Button, Row, Col, FormGroup, FormControl, ControlLabel } from \"react-bootstrap\";\nimport \"./Signup.css\";\nimport { signup } from '../util/APIUtils';\nimport {\n    ALIAS_MIN_LENGTH, ALIAS_MAX_LENGTH,\n    PASSWORD_MIN_LENGTH, PASSWORD_MAX_LENGTH\n} from '../constants';\n\n\nclass Signup extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      alias: {value:''},\n      email: {value:''},\n      password: {value:''},\n      confirmpassword: {value:''},\n      team: {value:''},\n      gender: {value:''},\n      error: {value:''},\n      errorAlias: {value:''},\n      errorPass: {value:''}\n    };\n\n    this.handleAliasChange = this.handleAliasChange.bind(this);\n    this.handleEmailChange = this.handleEmailChange.bind(this);\n    this.handlePassChange = this.handlePassChange.bind(this);\n    this.handleCPassChange = this.handleCPassChange.bind(this);\n    this.handleGChange = this.handleGChange.bind(this);\n    this.handleTChange = this.handleTChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n\n  handleGChange(event){\n    this.setState({ gender: this.inputG.value });\n    this.setState({ error: {value: ''}});\n  }\n\n  handleTChange(event){\n    this.setState({ team: this.inputT.value });\n    this.setState({ error: {value: ''}});\n  }\n\n  handleAliasChange(event) {\n    const target = event.target;\n    const inputValue = target.value;\n    this.setState({alias: inputValue});\n    this.setState({errorAlias: {value: this.validateAlias()}})\n    this.setState({ error: {value: ''}});\n  }\n\n  handleEmailChange(event) {\n    const target = event.target;\n    const inputValue = target.value;\n    this.setState({email: inputValue});\n    this.setState({ error: {value: ''}});\n  }\n\n  handlePassChange(event) {\n    const target = event.target;\n    const inputValue = target.value;\n    this.setState({password: inputValue});\n    this.setState({errorPass: {value: this.validatePassword()}})\n    this.setState({ error: {value: ''}});\n  }\n\n  handleCPassChange(event) {\n    const target = event.target;\n    const inputValue = target.value;\n    this.setState({confirmpassword: inputValue});\n    this.setState({ error: {value: ''}});\n  }\n\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const password = this.state.password;\n    const confirmpassword = this.state.confirmpassword;\n\n    if(password!==confirmpassword){\n      this.setState({ error: {value: \"Passwords Don't Match\"}});\n      this.setState({ confirmpassword: {value: '' }});\n    } else {\n      const signupRequest = {\n        alias: this.state.alias,\n        email: this.state.email,\n        password: this.state.password,\n        team: this.state.team,\n        gender: this.state.gender\n      };\n\n      signup(signupRequest)\n      .then(response => {\n          console.log(\"Successfully registered. Login to continue!\");\n          this.props.history.push(\"/login\");\n      }).catch(error => {\n        this.setState({ error: {value: error.message}});\n      });\n    }\n\n  }\n\n\n  render(){\n\n    return(\n      <div className=\"Signup\">\n        <form onSubmit={this.handleSubmit}>\n          <Row>\n            <Col md={6}>\n              <FormGroup controlId=\"alias\" bsSize=\"small\">\n                <ControlLabel>Trainer Alias</ControlLabel>\n                <FormControl\n                  autoFocus\n                  type=\"text\"\n                  autoComplete=\"off\"\n                  name=\"alias\"\n                  placeholder=\"Your Unique trainer name\"\n                  value={this.state.alias.value}\n                  onChange={(event) => this.handleAliasChange(event)}\n                />\n                <span>{this.state.errorAlias.value}</span>\n              </FormGroup>\n            </Col>\n            <Col md={6}>\n              <FormGroup controlId=\"email\" bsSize=\"small\">\n                <ControlLabel>Email ID</ControlLabel>\n                <FormControl\n                  autoFocus\n                  type=\"email\"\n                  name=\"email\"\n                  autoComplete=\"off\"\n                  placeholder=\"Your Email ID\"\n                  value={this.state.email.value}\n                  onChange={(event) => this.handleEmailChange(event)}\n                />\n              </FormGroup>\n            </Col>\n          </Row>\n          <Row>\n            <Col md={6}>\n              <FormGroup controlId=\"password\" bsSize=\"small\">\n                <ControlLabel>Password</ControlLabel>\n                <FormControl\n                  autoFocus\n                  type=\"password\"\n                  name=\"password\"\n                  autoComplete=\"off\"\n                  placeholder=\"A password between 8 to 20 characters\"\n                  value={this.state.password.value}\n                  onChange={(event) => this.handlePassChange(event)}\n                />\n                <span>{this.state.errorPass.value}</span>\n              </FormGroup>\n            </Col>\n            <Col md={6}>\n              <FormGroup controlId=\"confirmpassword\" bsSize=\"small\">\n                <ControlLabel>Confirm Password</ControlLabel>\n                <FormControl\n                  autoFocus\n                  type=\"password\"\n                  name=\"confirmpassword\"\n                  autoComplete=\"off\"\n                  placeholder=\"Re-enter password\"\n                  value={this.state.confirmpassword.value}\n                  onChange={(event) => this.handleCPassChange(event)}\n                />\n              </FormGroup>\n            </Col>\n          </Row>\n          <Row>\n            <Col md={6}>\n              <FormGroup controlId=\"team\" bsSize=\"small\">\n                <ControlLabel>Team</ControlLabel>\n                <FormControl\n                  autoFocus\n                  componentClass=\"select\"\n                  name=\"team\"\n                  placeholder=\"Your Team\"\n                  value={this.state.team.value}\n                  inputRef={ tm => this.inputT=tm }\n                  onChange={this.handleTChange.bind(this)}>\n                  <option value=\"\">select</option>\n                  <option value=\"INSTINCT\">Instinct (Yellow)</option>\n                  <option value=\"VALOR\">Valor (Red)</option>\n                  <option value=\"MYSTIC\">Mystic (Blue)</option>\n                </FormControl>\n              </FormGroup>\n            </Col>\n            <Col md={6}>\n              <FormGroup controlId=\"gender\" bsSize=\"small\">\n                <ControlLabel>Gender</ControlLabel>\n                <FormControl\n                  autoFocus\n                  componentClass=\"select\"\n                  name=\"gender\"\n                  placeholder=\"Your Gender\"\n                  value={this.state.gender.value}\n                  inputRef={ gen => this.inputG=gen }\n                  onChange={this.handleGChange.bind(this)}>\n                  <option value=\"\">select</option>\n                  <option value=\"MALE\">Male</option>\n                  <option value=\"FEMALE\">Female</option>\n                </FormControl>\n              </FormGroup>\n            </Col>\n          </Row>\n\n          <Button block type=\"submit\">\n            Register\n          </Button>\n        </form>\n        <h5>{this.state.error.value}</h5>\n      </div>\n    )\n  }\n\n  // Validation Functions\n\n\n  validateAlias() {\n      // First check for client side errors in alias\n      const alias = this.state.alias;\n      if(alias===''){\n        return '';\n      }\n      if(alias.length < ALIAS_MIN_LENGTH-1) {\n          return `Alias too short (Min ${ALIAS_MIN_LENGTH} characters)`;\n      } else if (alias.length > ALIAS_MAX_LENGTH-1) {\n          return `Alias too long (Max ${ALIAS_MAX_LENGTH} characters)`;\n      }\n      return '';\n  }\n\n\n  validatePassword() {\n      // First check for client side errors in alias\n      const password = this.state.password;\n      if(password===''){\n        return '';\n      }\n      if(password.length < PASSWORD_MIN_LENGTH-1) {\n          return `Password too short (Min ${PASSWORD_MIN_LENGTH} characters)`;\n      } else if (password.length > PASSWORD_MAX_LENGTH-1) {\n          return `Password too long (Max ${PASSWORD_MAX_LENGTH} characters)`;\n      }\n      return '';\n  }\n\n\n}\n\n\nexport default Signup;\n","import React from \"react\";\nimport { PageHeader, ListGroup, ListGroupItem , Button, FormGroup, FormControl, ControlLabel } from \"react-bootstrap\";\nimport {createPost, getAllPosts} from '../util/APIUtils';\nimport \"./PokeNews.css\";\n\nclass PokeNews extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isLoading: false,\n      content: {value:''},\n      posts: {value:[]}\n    };\n    this.handleContentChange = this.handleContentChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  loadAllPosts() {\n    if (!this.props.isAuthenticated) {\n      return;\n    }\n\n    this.setState({\n      isLoading: true\n    });\n\n    getAllPosts()\n    .then(response => {\n      this.setState({\n        posts: response,\n        isLoading: false\n      });\n    })\n    .catch(error => {\n      console.log(error.message);\n      this.setState({\n        isLoading: false\n      });\n    });\n  }\n\n  componentDidMount() {\n    this.loadAllPosts();\n  }\n\n  validateForm() {\n    return this.state.content.length > 0;\n  }\n\n\n  handleContentChange(event){\n    const target = event.target;\n    const inputValue = target.value;\n    this.setState({ content: inputValue });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n\n    this.setState({ isLoading: true });\n    const postRequest = {\n      content: this.state.content\n    };\n\n    createPost(postRequest)\n    .then(response => {\n        this.setState({ isLoading: false });\n        this.setState({ content: {value: '' }});\n        this.loadAllPosts();\n        this.props.history.push(\"/pokenews\");\n    }).catch(error => {\n        this.setState({ isLoading: false });\n        this.setState({ content: {value: '' }});\n        console.log(error.message);\n    });\n  }\n\n  renderPostList(posts) {\n    return [{}].concat(this.state.posts).map((post,i) =>\n      i!==0\n      ?<ListGroupItem key={post.id}>\n        <h4>{post.createdBy}</h4>\n        <h3>{post.content}</h3>\n        <h5>{\"Last Updated On: \" + new Date(post.updatedAt)}</h5>\n      </ListGroupItem>\n      :<ListGroupItem key=\"new\">\n        <h5>\n          ***\n        </h5>\n      </ListGroupItem>\n    ).reverse();\n  }\n\n  render() {\n    return (\n      <div className=\"PokeNews\">\n        <PageHeader>PokeNews</PageHeader>\n        <div className=\"CreatePost\">\n          <form onSubmit={this.handleSubmit}>\n            <FormGroup controlId=\"content\" bsSize=\"large\">\n              <ControlLabel>Create a new Post: </ControlLabel>\n              <FormControl\n                autoFocus\n                componentClass=\"textarea\"\n                name=\"content\"\n                placeholder=\"Enter text..\"\n                defaultValue=\"\"\n                required={true}\n                onChange={(event) => this.handleContentChange(event)}\n              />\n            </FormGroup>\n            <Button block type=\"submit\"\n              bsStyle=\"primary\"\n              bsSize=\"large\">\n              POST\n            </Button>\n          </form>\n        </div>\n        <div className=\"PostList\">\n          <ListGroup>\n            {!this.state.isLoading && this.renderPostList(this.state.posts)}\n          </ListGroup>\n        </div>\n      </div>\n    );\n  }\n\n}\n\n\nexport default PokeNews;\n","import React from \"react\";\nimport { PageHeader, ListGroup, ListGroupItem , Button, FormGroup, FormControl, ControlLabel } from \"react-bootstrap\";\nimport {createPost, getAllMyPosts} from '../util/APIUtils';\nimport \"./Trainer.css\";\n\nclass Trainer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isLoading: false,\n      content: {value:''},\n      posts: {value:[]}\n    };\n    this.handleContentChange = this.handleContentChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  loadAllPosts() {\n    if (!this.props.isAuthenticated) {\n      return;\n    }\n\n    this.setState({\n      isLoading: true\n    });\n\n    getAllMyPosts()\n    .then(response => {\n      this.setState({\n        posts: response,\n        isLoading: false\n      });\n    })\n    .catch(error => {\n      console.log(error.message);\n      this.setState({\n        isLoading: false\n      });\n    });\n  }\n\n  componentDidMount() {\n    this.loadAllPosts();\n  }\n\n  validateForm() {\n    return this.state.content.length > 0;\n  }\n\n\n  handleContentChange(event){\n    const target = event.target;\n    const inputValue = target.value;\n    this.setState({ content: inputValue });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n\n    this.setState({ isLoading: true });\n    const postRequest = {\n      content: this.state.content\n    };\n\n    createPost(postRequest)\n    .then(response => {\n        this.setState({ isLoading: false });\n        this.setState({ content: {value: '' }});\n        this.loadAllPosts();\n        this.props.history.push(\"/trainer\");\n    }).catch(error => {\n        this.setState({ isLoading: false });\n        this.setState({ content: {value: '' }});\n        console.log(error.message);\n    });\n  }\n\n  renderPostList(posts) {\n    return [{}].concat(this.state.posts).map((post,i) =>\n      i!==0\n      ?<ListGroupItem key={post.id}>\n        <h4>{post.createdBy}</h4>\n        <h3>{post.content}</h3>\n        <h5>{\"Last Updated On: \" + new Date(post.updatedAt)}</h5>\n      </ListGroupItem>\n      :<ListGroupItem key=\"new\">\n        <h5>\n          ***\n        </h5>\n      </ListGroupItem>\n    ).reverse();\n  }\n\n  render() {\n    return (\n      <div className=\"Trainer\">\n        <PageHeader>{this.props.currentUser.alias}'s Page</PageHeader>\n        <div className=\"CreatePost\">\n          <form onSubmit={this.handleSubmit}>\n            <FormGroup controlId=\"content\" bsSize=\"large\">\n              <ControlLabel>Create a new Post: </ControlLabel>\n              <FormControl\n                autoFocus\n                componentClass=\"textarea\"\n                name=\"content\"\n                placeholder=\"Enter text..\"\n                defaultValue=\"\"\n                required={true}\n                onChange={(event) => this.handleContentChange(event)}\n              />\n            </FormGroup>\n            <Button block type=\"submit\"\n              bsStyle=\"primary\"\n              bsSize=\"large\">\n              POST\n            </Button>\n          </form>\n        </div>\n        <div className=\"PostList\">\n          <ListGroup>\n            {!this.state.isLoading && this.renderPostList(this.state.posts)}\n          </ListGroup>\n        </div>\n      </div>\n    );\n  }\n\n}\n\n\nexport default Trainer;\n","import React from \"react\";\nimport { ListGroup, ListGroupItem, FormGroup, FormControl, ControlLabel } from \"react-bootstrap\";\nimport {searchPostByAlias} from '../util/APIUtils';\nimport \"./Search.css\";\n\nclass Search extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isLoading: false,\n      content: {value:''},\n      posts: {value:[]}\n    };\n    this.handleContentChange = this.handleContentChange.bind(this);\n  }\n\n  searchPosts(searchKey) {\n    if (!this.props.isAuthenticated) {\n      return;\n    }\n\n    this.setState({\n      isLoading: true\n    });\n\n    searchPostByAlias(searchKey)\n    .then(response => {\n      this.setState({\n        posts: response,\n        isLoading: false\n      });\n    })\n    .catch(error => {\n      console.log(error.message);\n      this.setState({\n        isLoading: false,\n        content: {value:''},\n        posts: [{id: 123, content: \"\", createdBy: \"No posts yet\", updatedAt: \"\"}]\n      });\n    });\n  }\n\n  componentDidMount() {\n    this.searchPosts();\n  }\n\n  validateForm() {\n    return this.state.content.length > 0;\n  }\n\n\n  handleContentChange(event){\n    event.preventDefault();\n    const target = event.target;\n    const inputValue = target.value;\n    this.setState({ content: inputValue });\n    this.setState({ isLoading: true });\n    this.searchPosts(inputValue);\n  }\n\n  renderPostList(posts) {\n    return [{}].concat(this.state.posts).map((post,i) =>\n      i!==0\n      ?<ListGroupItem key={post.id}>\n        <h4>{post.createdBy}</h4>\n        <h3>{post.content}</h3>\n        <h5>{\"Last Updated On: \" + new Date(post.updatedAt)}</h5>\n      </ListGroupItem>\n      :<ListGroupItem key=\"new\">\n        <h5>\n          ***\n        </h5>\n      </ListGroupItem>\n    ).reverse();\n  }\n\n  render() {\n    return (\n      <div className=\"Search\">\n        <div className=\"SearchKey\">\n          <form>\n            <FormGroup controlId=\"content\" bsSize=\"large\">\n              <ControlLabel>Search for posts by a Trainer's Alias</ControlLabel>\n              <FormControl\n                autoFocus\n                componentClass=\"textarea\"\n                name=\"content\"\n                placeholder=\"Enter trainer alias..\"\n                defaultValue=\"\"\n                required={true}\n                onChange={(event) => this.handleContentChange(event)}\n              />\n            </FormGroup>\n          </form>\n        </div>\n        <div className=\"PostList\">\n          <ListGroup>\n            {!this.state.isLoading && this.renderPostList(this.state.posts)}\n          </ListGroup>\n        </div>\n      </div>\n    );\n  }\n\n}\n\n\nexport default Search;\n","import React from \"react\";\nimport \"./NotFound.css\";\n\nexport default function NotFound() {\n  return (\n    <div className=\"NotFound\">\n      <h3>404</h3>\n      <h3>Uncertain Area! Get out of here!!</h3>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Route } from \"react-router-dom\";\n\nexport default ({ component: C, props: cProps, ...rest }) =>\n  <Route {...rest} render={props => <C {...props} {...cProps} />} />;\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Home from \"./containers/Home\";\nimport Login from \"./containers/Login\";\nimport Signup from \"./containers/Signup\"\nimport PokeNews from \"./containers/PokeNews\"\nimport Trainer from \"./containers/Trainer\"\nimport Search from \"./containers/Search\"\nimport NotFound from \"./common/NotFound\";\nimport AppliedRoute from \"./components/AppliedRoute\";\n\nexport default function Routes({ childProps }) {\n  return (\n    <Switch>\n      <AppliedRoute path=\"/\" exact component={Home} props={childProps} />\n      <AppliedRoute path=\"/login\" exact component={Login} props={childProps} />\n      <AppliedRoute path=\"/signup\" exact component={Signup} props={childProps} />\n      <AppliedRoute path=\"/pokenews\" exact component={PokeNews} props={childProps} />\n      <AppliedRoute path=\"/trainer\" exact component={Trainer} props={childProps} />\n      <AppliedRoute path=\"/search\" exact component={Search} props={childProps} />\n      <Route component={NotFound} />\n    </Switch>\n  );\n}\n","import React from \"react\";\n\nconst LoadingIndicator = () => {\n  return (\n    <>\n      <div className=\"spinner-grow text-primary\" role=\"status\">\n        <span className=\"sr-only\">Loading...</span>\n      </div>\n      <div className=\"spinner-grow text-success\" role=\"status\">\n        <span className=\"sr-only\">Loading...</span>\n      </div>\n      <div className=\"spinner-grow text-danger\" role=\"status\">\n        <span className=\"sr-only\">Loading...</span>\n      </div>\n      <div className=\"spinner-grow text-warning\" role=\"status\">\n        <span className=\"sr-only\">Loading...</span>\n      </div>\n      <div className=\"spinner-grow text-info\" role=\"status\">\n        <span className=\"sr-only\">Loading...</span>\n      </div>\n    </>\n  );\n}\n\nexport default LoadingIndicator;\n","import React, { Fragment } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { Nav, Navbar, NavItem } from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport Routes from \"./Routes\";\nimport './App.css';\n\nimport { getCurrentUser } from './util/APIUtils';\nimport { ACCESS_TOKEN } from './constants';\n\nimport LoadingIndicator from './common/LoadingIndicator';\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentUser: null,\n      isAuthenticated: false,\n      isLoading: false\n    }\n    this.handleLogout = this.handleLogout.bind(this);\n    this.loadCurrentUser = this.loadCurrentUser.bind(this);\n    this.handleLogin = this.handleLogin.bind(this);\n\n  }\n\n  loadCurrentUser() {\n    this.setState({\n      isLoading: true\n    });\n    getCurrentUser()\n    .then(response => {\n      this.setState({\n        currentUser: response,\n        isAuthenticated: true,\n        isLoading: false\n      });\n    })\n    .catch(error => {\n      this.setState({\n        isLoading: false\n      });\n    });\n  }\n\n  componentDidMount() {\n    this.loadCurrentUser();\n  }\n\n  // Handle Logout, Set currentUser and isAuthenticated state which will be passed to other components\n  handleLogout() {\n    localStorage.removeItem(ACCESS_TOKEN);\n\n    this.setState({\n      currentUser: null,\n      isAuthenticated: false\n    });\n\n    this.props.history.push(\"/login\");\n    console.log(\"Successfully logged out\");\n  }\n\n  /*\n   This method is called by the Login component after successful login\n   so that we can load the logged-in user details and set the currentUser &\n   isAuthenticated state, which other components will use to render their JSX\n  */\n  handleLogin() {\n    console.log(\"Successfully logged in\");\n    this.loadCurrentUser();\n    this.props.history.push(\"/\");\n  }\n\n\n  render() {\n    if(this.state.isLoading) {\n      return <LoadingIndicator />\n    }\n    const childProps = {\n      isAuthenticated: this.state.isAuthenticated,\n      currentUser: this.state.currentUser,\n      onLogin: this.handleLogin\n    };\n\n    return (\n      !this.state.isLoading &&\n      <div className=\"App Container\">\n        <Navbar fluid collapseOnSelect>\n          <Navbar.Header>\n            <Navbar.Brand>\n              <Link to=\"/\"><img alt=\"\" src=\"./android-chrome-192x192.png\" width=\"30\" height=\"30\"/>Pokemon GO Social</Link>\n            </Navbar.Brand>\n            <Navbar.Toggle />\n          </Navbar.Header>\n          <Navbar.Collapse>\n            <Nav pullRight>\n              {!this.state.isAuthenticated\n                ? <Fragment>\n                    <LinkContainer to=\"/signup\">\n                      <NavItem>Signup</NavItem>\n                    </LinkContainer>\n                    <LinkContainer to=\"/login\">\n                      <NavItem>Login</NavItem>\n                    </LinkContainer>\n                  </Fragment>\n                : <Fragment>\n                    <LinkContainer to=\"/pokenews\">\n                      <NavItem>PokeNews</NavItem>\n                    </LinkContainer>\n                    <LinkContainer to=\"/trainer\">\n                      <NavItem>{this.state.currentUser.alias}</NavItem>\n                    </LinkContainer>\n                    <LinkContainer to=\"/search\">\n                      <NavItem>Search</NavItem>\n                    </LinkContainer>\n                    <NavItem onClick={this.handleLogout}>Logout</NavItem>\n                  </Fragment>\n              }\n            </Nav>\n          </Navbar.Collapse>\n        </Navbar>\n        <Routes childProps={childProps} />\n      </div>\n    );\n  }\n}\n\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}